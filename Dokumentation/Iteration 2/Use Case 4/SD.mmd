sequenceDiagram
participant User as Driftsmedarbejder
participant BusListView as BusListView.xaml
participant ViewModel as BusListViewModel
participant Service as SimulationService
participant Bus as Bus
participant FileHelper as FileHelper

User->>BusListView: Klik "Kritiske busser"
BusListView->>ViewModel: ShowCriticalBusesCommand()
ViewModel->>Service: GetBuses()
Service-->>ViewModel: returnerer ObservableCollection<Bus>
ViewModel->>ViewModel: Filtrer(bus => bus.IsCritical)
ViewModel-->>BusListView: Opdateret liste af kritiske busser

User->>BusListView: Vælg bus, klik "Oplader"
BusListView->>ViewModel: MarkChargingCommand(busId)
ViewModel->>ViewModel: FindBus(busId)
ViewModel->>Bus: SetStatus(BusStatus.Charging)
Bus-->>ViewModel: Status sat OK
ViewModel->>FileHelper: SaveBusesAsync(buses)
FileHelper-->>ViewModel: Task Completed
ViewModel-->>BusListView: Refresh UI

User->>BusListView: Vælg bus, klik "Klar"
BusListView->>ViewModel: MarkReadyCommand(busId)
ViewModel->>ViewModel: FindBus(busId)
ViewModel->>Bus: SetStatus(BusStatus.Garage)
Bus-->>ViewModel: Status sat OK
ViewModel->>FileHelper: SaveBusesAsync(buses)
FileHelper-->>ViewModel: Task Completed
ViewModel-->>BusListView: Refresh UI

User->>BusListView: Klik "Foreslå" på bus
BusListView->>ViewModel: SuggestChargeTimeCommand(busId)
ViewModel->>ViewModel: FindBus(busId)
ViewModel->>Bus: EstimateChargeTime(rateKW)
Bus-->>ViewModel: Returner TimeSpan
ViewModel-->>BusListView: Vis estimeret opladningstid

alt Automatisk batteri-alarm
    Service->>Bus: UpdateBatteryLevel()
    Bus->>Service: isCritical == true
    Service->>ViewModel: CriticalBatteryAlert(bus)
    ViewModel-->>BusListView: Pop-up med alarm, marker bus rødt
end
