classDiagram
%% -------- DOMAIN --------
class Bus {
    +BusId: string
    +Model: BusModel
    +Route: RouteName
    +BatteryCapacity: double
    +BatteryLevel: double
    +Consumption: double
    +Status: BusStatus
    +TimeLeftUntil13Percent(avgKmh: double): TimeSpan
}
class BusModel { <<enumeration>> }
class RouteName { <<enumeration>> }
class BusStatus { <<enumeration>> }
Bus --> BusModel
Bus --> RouteName
Bus --> BusStatus

%% -------- FILE I/O --------
class FileHelper {
    +SaveBusesAsync(IEnumerable~Bus~): Task
    +LoadBusesAsync(): Task<List~Bus~>
}

%% -------- SERVICES --------
class SimulationService {
    +Buses: ObservableCollection~Bus~
    +Start(): void
    +Stop(): void
    +SimulateTick(): void
}
SimulationService --> Bus

%% -------- PRESENTATION --------
class BusListViewModel {
    -fileHelper: FileHelper
    -simService: SimulationService
    +Buses: ObservableCollection~Bus~
    +AddCmd(): void
    +EditCmd(): void
    +DeleteCmd(): void
    +FilterLow(threshold): IEnumerable~Bus~
    +Search(busId): Bus
    +SortRunning(): IEnumerable~Bus~
    +UpdateBatteryCmd(): void
    +Reload(): Task
}

class AddEditBusViewModel {
    -fileHelper: FileHelper
    +Bus: Bus
    +IsNew: bool
    +SaveCmd(): Task
    +CancelCmd(): void
}

class UpdateBatteryViewModel {
    -fileHelper: FileHelper
    +Bus: Bus
    +NewLevel: double
    +SaveCmd(): Task
    +CancelCmd(): void
}

class BusDetailViewModel {
    +SelectedBus: Bus
}

class MainViewModel {
    -fileHelper: FileHelper
    +BusListVM: BusListViewModel
    +BusDetailVM: BusDetailViewModel
    +InitializeAsync(): Task
}

%% -------- RELATIONS --------
MainViewModel --> BusListViewModel
MainViewModel --> BusDetailViewModel
BusListViewModel ..> SimulationService
BusListViewModel ..> FileHelper : «load / save»
UpdateBatteryViewModel ..> FileHelper : «save»
AddEditBusViewModel ..> FileHelper
BusListViewModel --> Bus
BusDetailViewModel --> Bus
