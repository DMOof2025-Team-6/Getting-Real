classDiagram
%% -------- DOMAIN --------
class Bus {
    +BusId: string
    +Model: BusModel
    +BatteryCapacity: double
    +BatteryLevel: double          /* 0-100 % */
    +Consumption: double           /* kWh / km */
    +Status: BusStatus
    +IsCritical: bool              /* BatteryLevel < 30 % */
    +TimeLeftUntil13Percent(avgKmh: double): TimeSpan
}

class BusModel   { <<enumeration>> }
class BusStatus  { <<enumeration>> }
Bus --> BusModel
Bus --> BusStatus

%% -------- SERVICE --------
class SimulationService {
    +Buses: ObservableCollection~Bus~
    +Start(): void
    +Stop(): void
    +SimulateTick(): void
    +event CriticalAlert(bus: Bus)        /* fired when IsCritical becomes true */
}
SimulationService --> Bus                 : monitors battery

%% -------- PERSISTENCE --------
class FileHelper {
    +SaveBusesAsync(IEnumerable~Bus~): Task
    +LoadBusesAsync(): Task<List~Bus~>
}

%% -------- PRESENTATION (UC-4 specific) --------
class BusListViewModel {
    -simService: SimulationService
    -fileHelper: FileHelper
    +Buses: ObservableCollection~Bus~

    
    +ShowCriticalCmd(): void
    +MarkChargingCmd(bus: Bus): void
    +MarkReadyCmd(bus: Bus): void
    +SuggestCharge(bus: Bus): TimeSpan
}

BusListViewModel ..> SimulationService   : observes alerts
BusListViewModel ..> FileHelper          : saves changes
BusListViewModel --> Bus                 : displays / updates buses
